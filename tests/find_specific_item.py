#!/usr/bin/env python3
"""
–ü–æ–∏—Å–∫ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ —Ç–æ–≤–∞—Ä–∞ –≤ Power BI
"""

import requests
import sys
import json

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ Airflow
sys.path.append('/opt/airflow')

from airflow.models import Variable

def get_access_token():
    """–ü–æ–ª—É—á–∞–µ–º access token –¥–ª—è Power BI API"""
    tenant_id = Variable.get('powerbi_tenant_id')
    client_id = Variable.get('powerbi_client_id')
    client_secret = Variable.get('powerbi_client_secret')
    
    token_url = f'https://login.microsoftonline.com/{tenant_id}/oauth2/token'
    token_data = {
        'grant_type': 'client_credentials',
        'client_id': client_id,
        'client_secret': client_secret,
        'resource': 'https://analysis.windows.net/powerbi/api'
    }
    
    resp = requests.post(token_url, data=token_data)
    resp.raise_for_status()
    return resp.json()['access_token']

def find_specific_item(access_token, workspace_id, dataset_id, item_number):
    """–ò—â–µ–º –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π —Ç–æ–≤–∞—Ä –ø–æ item_number"""
    url = f'https://api.powerbi.com/v1.0/myorg/groups/{workspace_id}/datasets/{dataset_id}/executeQueries'
    
    headers = {
        'Authorization': f'Bearer {access_token}',
        'Content-Type': 'application/json'
    }
    
    # DAX –∑–∞–ø—Ä–æ—Å –¥–ª—è –ø–æ–∏—Å–∫–∞ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ —Ç–æ–≤–∞—Ä–∞
    query = f"""
    EVALUATE
    FILTER(
        SUMMARIZECOLUMNS(
            'CompanyProducts'[ID],
            'CompanyProducts'[Description],
            'CompanyProducts'[Brand],
            'CompanyProducts'[Category],
            'CompanyProducts'[item_number],
            "Product Properties",
            VAR CurrentProduct = SELECTEDVALUE('–£–¢_–ù–æ–º–µ–Ω–∫–ª–∞—Ç—É—Ä–∞'[–ê—Ä—Ç–∏–∫—É–ª], "No Product Selected")
            RETURN
            CONCATENATEX(
                TOPN(
                    1000,
                    FILTER(
                        'Char_table',
                        [–ê—Ä—Ç–∏–∫—É–ª] = CurrentProduct
                    ),
                    [SortOrder]
                ),
                [_description] & ": " & [–ó–Ω–∞—á–µ–Ω–∏–µ],
                " | ",
                [SortOrder]
            )
        ),
        'CompanyProducts'[item_number] = "{item_number}"
    )
    """
    
    body = {
        "queries": [
            {
                "query": query
            }
        ]
    }
    
    print(f"üîç –ò—â–µ–º —Ç–æ–≤–∞—Ä —Å item_number: {item_number}")
    print(f"üìä DAX Query: {query[:200]}...")
    
    try:
        resp = requests.post(url, headers=headers, json=body)
        
        if resp.status_code == 200:
            result = resp.json()
            print(f"‚úÖ –£–°–ü–ï–•! –°—Ç–∞—Ç—É—Å: {resp.status_code}")
            
            if result.get('results') and result['results'][0].get('tables'):
                tables = result['results'][0]['tables']
                for i, table in enumerate(tables):
                    rows = table.get('rows', [])
                    print(f"üìã –¢–∞–±–ª–∏—Ü–∞ {i+1}: {len(rows)} —Å—Ç—Ä–æ–∫")
                    
                    if rows:
                        for j, row in enumerate(rows):
                            print(f"\nüì¶ –¢–æ–≤–∞—Ä {j+1}:")
                            for key, value in row.items():
                                if key == '[Product Properties]':
                                    print(f"   {key}: {value[:200]}...")
                                else:
                                    print(f"   {key}: {value}")
                    else:
                        print("‚ùå –¢–æ–≤–∞—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ Power BI")
            else:
                print("‚ùå –ù–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤")
                
        else:
            print(f"‚ùå –û–®–ò–ë–ö–ê! –°—Ç–∞—Ç—É—Å: {resp.status_code}")
            print(f"–û—Ç–≤–µ—Ç: {resp.text}")
            
    except Exception as e:
        print(f"‚ùå –ò–°–ö–õ–Æ–ß–ï–ù–ò–ï: {e}")

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("=== –ü–æ–∏—Å–∫ —Ç–æ–≤–∞—Ä–∞ –≤ Power BI ===")
    
    workspace_id = Variable.get('powerbi_workspace_id')
    dataset_id = '022e7796-b30f-44d4-b076-15331e612d47'  # ID –¥–∞—Ç–∞—Å–µ—Ç–∞
    
    try:
        # –ü–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω
        access_token = get_access_token()
        print("‚úì –¢–æ–∫–µ–Ω –ø–æ–ª—É—á–µ–Ω —É—Å–ø–µ—à–Ω–æ")
        
        # –ò—â–µ–º –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π —Ç–æ–≤–∞—Ä
        item_number = "20.235.A0615.305"
        find_specific_item(access_token, workspace_id, dataset_id, item_number)
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –≤ –æ—Å–Ω–æ–≤–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏: {e}")

if __name__ == '__main__':
    main()

