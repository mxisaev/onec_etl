#!/usr/bin/env python3
"""
Test script that EXACTLY simulates what the main DAG does
This test calls extract_powerbi_data with the same task_config as the DAG
"""

import sys
import os
from datetime import datetime

# Add parent directory to path
sys.path.append(os.path.dirname(os.path.dirname(os.path.abspath(__file__))))

def test_dag_simulation():
    """Test that EXACTLY simulates the main DAG execution"""
    try:
        from airflow.models import Variable
        from suppliers_etl.tasks.extract import extract_powerbi_data
        
        print("üß™ Testing DAG simulation - EXACT same code as main DAG...")
        
        # –ü–æ–ª—É—á–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é dataset –∏–∑ Airflow Variables (—Ç–æ—á–Ω–æ –∫–∞–∫ –≤ DAG)
        datasets = Variable.get('datasets', deserialize_json=True)
        partners_dataset = datasets['partners']
        
        print(f"üìä Dataset config: {partners_dataset}")
        
        # –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –∑–∞–¥–∞—á–∏ —Å–æ–≥–ª–∞—Å–Ω–æ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏ (—Ç–æ—á–Ω–æ –∫–∞–∫ –≤ DAG)
        task_config = {
            'dataset_id': partners_dataset['id'],  # –ü–æ–ª—É—á–∞–µ–º –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π datasets
            'dax_query_key': 'partners',  # –ò—Å–ø–æ–ª—å–∑—É–µ–º –∫–ª—é—á 'partners' –∏–∑ Airflow Variables
            'columns': {
                '–£–¢_–ü–∞—Ä—Ç–Ω–µ—Ä—ã[–ü–∞—Ä—Ç–Ω–µ—Ä.–£–¢11]': 'partner',
                '–£–¢_–ö–æ–Ω—Ç–∞–∫—Ç–Ω—ã–µ –ª–∏—Ü–∞ –ø–∞—Ä—Ç–Ω–µ—Ä–æ–≤[–ö–æ–Ω—Ç–∞–∫—Ç–Ω–æ–µ –ª–∏—Ü–æ]': 'contact',
                '–£–¢_–ö–æ–Ω—Ç–∞–∫—Ç–Ω—ã–µ –ª–∏—Ü–∞ –ø–∞—Ä—Ç–Ω–µ—Ä–æ–≤[email]': 'contact_email',
                '–£–¢_–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏[_description]': 'responsible_manager',
                '–£–¢_–ü–∞—Ä—Ç–Ω–µ—Ä—ã[id_1c]': 'id_1c_partner',
                '–£–¢_–ü–∞—Ä—Ç–Ω–µ—Ä—ã[is_client]': 'is_client',
                '–£–¢_–ü–∞—Ä—Ç–Ω–µ—Ä—ã[is_supplier]': 'is_supplier',
                '–£–¢_–ö–æ–Ω—Ç–∞–∫—Ç–Ω—ã–µ –ª–∏—Ü–∞ –ø–∞—Ä—Ç–Ω–µ—Ä–æ–≤[–†–æ–ª—å]': 'role',
                '–£–¢_–ö–æ–Ω—Ç–∞–∫—Ç–Ω—ã–µ –ª–∏—Ü–∞ –ø–∞—Ä—Ç–Ω–µ—Ä–æ–≤[id_1c]': 'id_1c_contact'
            }
        }
        
        print(f"üîß Task config: {task_config}")
        print(f"üöÄ Calling extract_powerbi_data with EXACT same parameters as DAG...")
        
        # –í—ã–∑—ã–≤–∞–µ–º —Ç–æ—á–Ω–æ —Ç—É –∂–µ —Ñ—É–Ω–∫—Ü–∏—é, —á—Ç–æ –∏ DAG
        result = extract_powerbi_data(task_config)
        
        print(f"‚úÖ SUCCESS! DAG simulation completed: {len(result)} rows")
        if result:
            print(f"üìã Sample data: {result[0]}")
        
        return result
        
    except Exception as e:
        print(f"‚ùå DAG simulation FAILED: {str(e)}")
        import traceback
        traceback.print_exc()
        raise

if __name__ == "__main__":
    print("üß™ Starting DAG simulation test...")
    result = test_dag_simulation()


