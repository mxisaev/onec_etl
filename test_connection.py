#!/usr/bin/env python3
"""
–ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Power BI –¥–ª—è –ø–æ—Å—Ç–∞–≤—â–∏–∫–æ–≤
"""

import requests
import sys
import json

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ Airflow
sys.path.append('/opt/airflow')

from airflow.models import Variable

def test_powerbi_connection():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Power BI"""
    print("=== –¢–µ—Å—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Power BI –¥–ª—è –ø–æ—Å—Ç–∞–≤—â–∏–∫–æ–≤ ===")
    
    try:
        # –ü–æ–ª—É—á–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –∏–∑ Airflow
        print("1. –ü–æ–ª—É—á–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –∏–∑ Airflow...")
        
        client_id = Variable.get('powerbi_client_id')
        print(f"   ‚úì powerbi_client_id: {client_id[:10]}...")
        
        client_secret = Variable.get('powerbi_client_secret')
        print(f"   ‚úì powerbi_client_secret: {client_secret[:10]}...")
        
        tenant_id = Variable.get('powerbi_tenant_id')
        print(f"   ‚úì powerbi_tenant_id: {tenant_id}")
        
        workspace_id = Variable.get('powerbi_workspace_id')
        print(f"   ‚úì powerbi_workspace_id: {workspace_id}")
        
        print("   ‚úÖ –í—Å–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –ø–æ–ª—É—á–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!")
        
    except Exception as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö: {e}")
        return False
    
    try:
        # –ü–æ–ª—É—á–∞–µ–º access token
        print("\n2. –ü–æ–ª—É—á–∞–µ–º access token...")
        
        token_url = f'https://login.microsoftonline.com/{tenant_id}/oauth2/token'
        token_data = {
            'grant_type': 'client_credentials',
            'client_id': client_id,
            'client_secret': client_secret,
            'resource': 'https://analysis.windows.net/powerbi/api'
        }
        
        token_response = requests.post(token_url, data=token_data)
        
        if token_response.status_code != 200:
            print(f"   ‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–æ–∫–µ–Ω–∞: {token_response.status_code}")
            print(f"   –û—Ç–≤–µ—Ç: {token_response.text}")
            return False
        
        token_json = token_response.json()
        access_token = token_json.get('access_token')
        print("   ‚úÖ –¢–æ–∫–µ–Ω –ø–æ–ª—É—á–µ–Ω —É—Å–ø–µ—à–Ω–æ!")
        
    except Exception as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–æ–∫–µ–Ω–∞: {e}")
        return False
    
    try:
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ workspace
        print("\n3. –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ workspace...")
        
        workspace_url = f'https://api.powerbi.com/v1.0/myorg/groups/{workspace_id}'
        headers = {
            'Authorization': f'Bearer {access_token}',
            'Content-Type': 'application/json'
        }
        
        workspace_response = requests.get(workspace_url, headers=headers)
        
        if workspace_response.status_code != 200:
            print(f"   ‚ùå –û—à–∏–±–∫–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ workspace: {workspace_response.status_code}")
            print(f"   –û—Ç–≤–µ—Ç: {workspace_response.text}")
            return False
        
        workspace_info = workspace_response.json()
        print(f"   ‚úÖ Workspace –¥–æ—Å—Ç—É–ø–µ–Ω: {workspace_info.get('name', 'N/A')}")
        
    except Exception as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ workspace: {e}")
        return False
    
    try:
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –¥–æ—Å—Ç—É–ø –∫ –¥–∞—Ç–∞—Å–µ—Ç—É –ø–æ—Å—Ç–∞–≤—â–∏–∫–æ–≤
        print("\n4. –¢–µ—Å—Ç–∏—Ä—É–µ–º –¥–æ—Å—Ç—É–ø –∫ –¥–∞—Ç–∞—Å–µ—Ç—É –ø–æ—Å—Ç–∞–≤—â–∏–∫–æ–≤...")
        
        dataset_id = 'afb5ea40-5805-4b0b-a082-81ca7333be85'
        dataset_url = f'https://api.powerbi.com/v1.0/myorg/groups/{workspace_id}/datasets/{dataset_id}'
        
        dataset_response = requests.get(dataset_url, headers=headers)
        
        if dataset_response.status_code != 200:
            print(f"   ‚ùå –û—à–∏–±–∫–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ –¥–∞—Ç–∞—Å–µ—Ç—É: {dataset_response.status_code}")
            print(f"   –û—Ç–≤–µ—Ç: {dataset_response.text}")
            return False
        
        dataset_info = dataset_response.json()
        print(f"   ‚úÖ –î–∞—Ç–∞—Å–µ—Ç –¥–æ—Å—Ç—É–ø–µ–Ω: {dataset_info.get('name', 'N/A')}")
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–∞–±–ª–∏—Ü—ã –≤ –¥–∞—Ç–∞—Å–µ—Ç–µ
        tables = dataset_info.get('tables', [])
        if tables:
            print(f"   üìä –ù–∞–π–¥–µ–Ω–æ —Ç–∞–±–ª–∏—Ü: {len(tables)}")
            for table in tables:
                print(f"      - {table.get('name', 'N/A')}")
        else:
            print("   ‚ö†Ô∏è  –¢–∞–±–ª–∏—Ü—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
        
    except Exception as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ –¥–∞—Ç–∞—Å–µ—Ç—É: {e}")
        return False
    
    print("\nüéâ –¢–µ—Å—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ!")
    return True

if __name__ == '__main__':
    success = test_powerbi_connection()
    if not success:
        sys.exit(1)
